---

name: Build and Release
on:
  workflow_dispatch:
    inputs:
      bump:
        description: Semver level to bump
        required: true
        default: patch
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  bump:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      app: ${{ steps.new_app.outputs.new_version }}
      chart: ${{ steps.new_chart.outputs.new_version }}
      new_ref: ${{ steps.commit.outputs.commit_hash }}
    steps:
      - uses: actions/checkout@v4

      - name: Current chart version
        id: version
        run: |
          echo "app=$(grep -oP '(?<=^version = ")[\w\.]+' Cargo.toml)" >> $GITHUB_OUTPUT
          echo "chart=$(grep -oP '(?<=^version: ).+' chart/Chart.yaml)" >> $GITHUB_OUTPUT

      - uses: actions-ecosystem/action-bump-semver@v1
        id: new_app
        with:
          current_version: ${{ steps.version.outputs.app }}
          level: ${{ github.event.inputs.bump }}

      - uses: actions-ecosystem/action-bump-semver@v1
        id: new_chart
        with:
          current_version: ${{ steps.version.outputs.app }}
          level: patch

      - name: Update Chart.yaml and Cargo.toml
        run: |
          sed -i "s/^appVersion: .*/appVersion: ${{ steps.new_app.outputs.new_version }}/" chart/Chart.yaml
          sed -i "s/^version: .*/version: ${{ steps.new_chart.outputs.new_version }}/" chart/Chart.yaml
          sed -i "s/^version = .*/version = \"${{ steps.new_app.outputs.new_version }}\"/" Cargo.toml

      - name: Commit changes
        id: commit
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: main
          commit_message: Bump version to ${{ steps.new_app.outputs.new_version }}
          file_pattern: chart/Chart.yaml

  release:
    runs-on: ubuntu-latest
    needs: bump
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.bump.outputs.new_ref }}

      # - name: Setup Rust
      #   run: rustup toolchain install stable --profile minimal

      # - uses: Swatinem/rust-cache@v2
      #   with:
      #     prefix-key: just-passwordless

      # - name: Build
      #   run: cargo build --release

      - name: Create release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Just Passwordless v${{ needs.bump.outputs.app }}
          tag_name: v${{ needs.bump.outputs.app }}
          target_commitish: ${{ needs.bump.outputs.new_ref }}
          generate_release_notes: true
          make_latest: true
          # files: target/release/just-passwordless

  docker:
    runs-on: ubuntu-latest
    needs: bump
    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.bump.outputs.new_ref }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.actor }}/just-passwordless
          tags: |
            # On a pull request, tag the image with the PR ID e.g. pr-123
            type=ref,event=pr
            # Add the short commit hash as a tag
            type=sha
            # Add the latest tag if this is the main (default) branch
            type=raw,value=latest,enable={{ is_default_branch }}
            # Add the version tag if this is a release
            type=raw,value=v${{ needs.bump.outputs.app }},enable={{ is_default_branch }}

      - name: Docker Build
        uses: docker/build-push-action@v5
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          # If we don't specify the platform, it also pushes for unknown/unknown
          platforms: ${{ matrix.platform }}

  chart:
    runs-on: ubuntu-latest
    needs: bump
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.bump.outputs.new_ref }}

      - name: Install Helm
        uses: azure/setup-helm@v4

      - name: Run chart-releaser
        uses: bsord/helm-push@v4
        with:
          useOCIRegistry: true
          registry-url: oci://ghcr.io/${{ github.actor }}
          username: ${{ github.actor }}
          access-token: ${{ secrets.GITHUB_TOKEN }}
          force: true
